// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using back_end.Data;

namespace webApiDB.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20200521122030_CriadoAcessoEAmbienteModificadoUser")]
    partial class CriadoAcessoEAmbienteModificadoUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("back_end.Domain.Acesso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AmbienteId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.HasIndex("UserId");

                    b.ToTable("Acesso");
                });

            modelBuilder.Entity("back_end.Domain.Ambiente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Area")
                        .HasColumnType("text");

                    b.Property<char>("Bloco")
                        .HasColumnType("character(1)");

                    b.Property<int>("Capacidade")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("IpCamera")
                        .HasColumnType("text");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.Property<string>("TipoAmbiente")
                        .HasColumnType("text");

                    b.Property<int>("TotalComputador")
                        .HasColumnType("integer");

                    b.Property<int>("TotalPessoa")
                        .HasColumnType("integer");

                    b.Property<string>("UnidInstitucional")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Ambiente");
                });

            modelBuilder.Entity("back_end.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Celular")
                        .HasColumnType("text");

                    b.Property<string>("CodeRFID")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("Foto")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("back_end.Domain.Acesso", b =>
                {
                    b.HasOne("back_end.Domain.Ambiente", "Ambiente")
                        .WithMany("Acessos")
                        .HasForeignKey("AmbienteId");

                    b.HasOne("back_end.Domain.User", "User")
                        .WithMany("Acessos")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
